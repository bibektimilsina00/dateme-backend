"""Initial migration

Revision ID: d654dc4996a7
Revises: d4867f3a4c0a
Create Date: 2024-02-14 10:51:10.865340

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd654dc4996a7'
down_revision = 'd4867f3a4c0a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('country',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_name', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_country_id'), 'country', ['id'], unique=False)
    op.create_table('interest',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('interest_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interest_id'), 'interest', ['id'], unique=False)
    op.create_table('activitylog',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_title'), 'notification', ['title'], unique=False)
    op.create_table('userblock',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('blocker_id', sa.Integer(), nullable=False),
    sa.Column('blocked_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['blocked_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['blocker_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userimage',
    sa.Column('image_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('image_id')
    )
    op.create_index(op.f('ix_userimage_image_id'), 'userimage', ['image_id'], unique=False)
    op.create_table('userinterest',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'interest_id')
    )
    op.create_table('userlocation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.DECIMAL(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=9, scale=6), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userpreference',
    sa.Column('preference_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('preferred_gender', sa.String(), nullable=True),
    sa.Column('age_range', sa.String(), nullable=True),
    sa.Column('location_radius', sa.Integer(), nullable=True),
    sa.Column('looking_for', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('preference_id')
    )
    op.create_index(op.f('ix_userpreference_preference_id'), 'userpreference', ['preference_id'], unique=False)
    op.create_table('userreport',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('reported_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reported_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('auth_provider', sa.String(), nullable=True))
    op.add_column('user', sa.Column('country_id', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('user', sa.Column('date_of_birth', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('location', sa.String(), nullable=True))
    op.add_column('user', sa.Column('profile_status', sa.String(), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index('ix_user_full_name', table_name='user')
    op.create_foreign_key(None, 'user', 'country', ['country_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.create_index('ix_user_full_name', 'user', ['full_name'], unique=False)
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'profile_status')
    op.drop_column('user', 'location')
    op.drop_column('user', 'date_of_birth')
    op.drop_column('user', 'gender')
    op.drop_column('user', 'country_id')
    op.drop_column('user', 'auth_provider')
    op.drop_table('userreport')
    op.drop_index(op.f('ix_userpreference_preference_id'), table_name='userpreference')
    op.drop_table('userpreference')
    op.drop_table('userlocation')
    op.drop_table('userinterest')
    op.drop_index(op.f('ix_userimage_image_id'), table_name='userimage')
    op.drop_table('userimage')
    op.drop_table('userblock')
    op.drop_index(op.f('ix_notification_title'), table_name='notification')
    op.drop_table('notification')
    op.drop_table('message')
    op.drop_table('activitylog')
    op.drop_index(op.f('ix_interest_id'), table_name='interest')
    op.drop_table('interest')
    op.drop_index(op.f('ix_country_id'), table_name='country')
    op.drop_table('country')
    op.drop_table('chat')
    # ### end Alembic commands ###
